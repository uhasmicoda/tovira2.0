<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="20" total="32" passed="9" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-19T10:10:40 IST" name="Suite" finished-at="2025-03-19T10:12:54 IST" duration-ms="133965">
    <groups>
      <group name="system">
        <method signature="CreateAndDeleteDoctorbyAdminTest.createAndDeleteDoctorbyAdminTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@1165b38]" name="createAndDeleteDoctorbyAdminTest" class="com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest"/>
        <method signature="AddMedicalHistoryByDoctorTest.addMedicalHistoryByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@54d9d12d]" name="addMedicalHistoryByDoctorTest" class="com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest"/>
        <method signature="CreateAndDeleteDoctorbyAdminTest.createAndDeleteDoctorbyAdminTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@544fa968]" name="createAndDeleteDoctorbyAdminTest" class="com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest"/>
        <method signature="AddMedicalHistoryByDoctorTest.addMedicalHistoryByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" name="addMedicalHistoryByDoctorTest" class="com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest"/>
      </group> <!-- system -->
      <group name="integration">
        <method signature="CreateSpecializationTest.createSpecializationTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@327514f]" name="createSpecializationTest" class="com.geneuineCare.healthCare.adminTest.CreateSpecializationTest"/>
        <method signature="CreatePatientAndSearchbyNameTest.createPatientAndSearchbyNameTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@4c12331b]" name="createPatientAndSearchbyNameTest" class="com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest"/>
        <method signature="CreateSpecializationTest.createSpecializationTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@fa4c865]" name="createSpecializationTest" class="com.geneuineCare.healthCare.adminTest.CreateSpecializationTest"/>
        <method signature="CreatePatientAndSearchbyNameTest.createPatientAndSearchbyNameTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@247bddad]" name="createPatientAndSearchbyNameTest" class="com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest"/>
      </group> <!-- integration -->
      <group name="smoke">
        <method signature="CreateDoctorTest.createDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c402120]" name="createDoctorTest" class="com.geneuineCare.healthCare.adminTest.CreateDoctorTest"/>
        <method signature="CreatePatientByDoctorTest.createPatientByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@5b12b668]" name="createPatientByDoctorTest" class="com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest"/>
        <method signature="CreateDoctorTest.createDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c178a76]" name="createDoctorTest" class="com.geneuineCare.healthCare.adminTest.CreateDoctorTest"/>
        <method signature="CreatePatientByDoctorTest.createPatientByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@3bd82cf5]" name="createPatientByDoctorTest" class="com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-03-19T10:10:40 IST" name="Test2" finished-at="2025-03-19T10:12:52 IST" duration-ms="132048">
      <class name="com.geneuineCare.healthCare.adminTest.CreateDoctorTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c178a76]" started-at="2025-03-19T10:11:13 IST" name="configBC" finished-at="2025-03-19T10:11:15 IST" duration-ms="1304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c178a76]" started-at="2025-03-19T10:11:15 IST" name="configBM" finished-at="2025-03-19T10:11:18 IST" duration-ms="3724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c178a76]" started-at="2025-03-19T10:11:18 IST" name="createDoctorTest" finished-at="2025-03-19T10:11:26 IST" duration-ms="7684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDoctorTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c178a76]" started-at="2025-03-19T10:11:26 IST" name="configAM" finished-at="2025-03-19T10:11:28 IST" duration-ms="2445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c178a76]" started-at="2025-03-19T10:11:28 IST" name="configAC" finished-at="2025-03-19T10:11:29 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.adminTest.CreateDoctorTest -->
      <class name="com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest">
        <test-method is-config="true" signature="configBS()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" started-at="2025-03-19T10:10:40 IST" name="configBS" finished-at="2025-03-19T10:10:40 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBS -->
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" started-at="2025-03-19T10:10:40 IST" name="configBC" finished-at="2025-03-19T10:10:43 IST" duration-ms="2465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" started-at="2025-03-19T10:10:43 IST" name="configBM" finished-at="2025-03-19T10:10:50 IST" duration-ms="6668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="addMedicalHistoryByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" started-at="2025-03-19T10:10:50 IST" name="addMedicalHistoryByDoctorTest" finished-at="2025-03-19T10:11:11 IST" duration-ms="21120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMedicalHistoryByDoctorTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" started-at="2025-03-19T10:11:11 IST" name="configAM" finished-at="2025-03-19T10:11:12 IST" duration-ms="1359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" started-at="2025-03-19T10:11:12 IST" name="configAC" finished-at="2025-03-19T10:11:13 IST" duration-ms="1298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
        <test-method is-config="true" signature="configAS()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@b2c9a9c]" started-at="2025-03-19T10:12:54 IST" name="configAS" finished-at="2025-03-19T10:12:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAS -->
      </class> <!-- com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest -->
      <class name="com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@247bddad]" started-at="2025-03-19T10:12:27 IST" name="configBC" finished-at="2025-03-19T10:12:37 IST" duration-ms="10500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@247bddad]" started-at="2025-03-19T10:12:37 IST" name="configBM" finished-at="2025-03-19T10:12:38 IST" duration-ms="587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createPatientAndSearchbyNameTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@247bddad]" started-at="2025-03-19T10:12:38 IST" name="createPatientAndSearchbyNameTest" finished-at="2025-03-19T10:12:52 IST" duration-ms="14009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPatientAndSearchbyNameTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@247bddad]" started-at="2025-03-19T10:12:52 IST" name="configAM" finished-at="2025-03-19T10:12:52 IST" duration-ms="318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@247bddad]" started-at="2025-03-19T10:12:52 IST" name="configAC" finished-at="2025-03-19T10:12:52 IST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest -->
      <class name="com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@544fa968]" started-at="2025-03-19T10:12:05 IST" name="configBC" finished-at="2025-03-19T10:12:07 IST" duration-ms="1226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@544fa968]" started-at="2025-03-19T10:12:07 IST" name="configBM" finished-at="2025-03-19T10:12:11 IST" duration-ms="4478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createAndDeleteDoctorbyAdminTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@544fa968]" started-at="2025-03-19T10:12:11 IST" name="createAndDeleteDoctorbyAdminTest" finished-at="2025-03-19T10:12:24 IST" duration-ms="13016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndDeleteDoctorbyAdminTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@544fa968]" started-at="2025-03-19T10:12:24 IST" name="configAM" finished-at="2025-03-19T10:12:26 IST" duration-ms="2078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@544fa968]" started-at="2025-03-19T10:12:26 IST" name="configAC" finished-at="2025-03-19T10:12:27 IST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest -->
      <class name="com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@3bd82cf5]" started-at="2025-03-19T10:11:48 IST" name="configBC" finished-at="2025-03-19T10:11:50 IST" duration-ms="1312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@3bd82cf5]" started-at="2025-03-19T10:11:50 IST" name="configBM" finished-at="2025-03-19T10:11:55 IST" duration-ms="5117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createPatientByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@3bd82cf5]" started-at="2025-03-19T10:11:55 IST" name="createPatientByDoctorTest" finished-at="2025-03-19T10:12:05 IST" duration-ms="9905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPatientByDoctorTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@3bd82cf5]" started-at="2025-03-19T10:12:05 IST" name="configAM" finished-at="2025-03-19T10:12:05 IST" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@3bd82cf5]" started-at="2025-03-19T10:12:05 IST" name="configAC" finished-at="2025-03-19T10:12:05 IST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest -->
      <class name="com.geneuineCare.healthCare.adminTest.CreateSpecializationTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@fa4c865]" started-at="2025-03-19T10:11:29 IST" name="configBC" finished-at="2025-03-19T10:11:30 IST" duration-ms="1439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@fa4c865]" started-at="2025-03-19T10:11:30 IST" name="configBM" finished-at="2025-03-19T10:11:33 IST" duration-ms="2500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createSpecializationTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@fa4c865]" started-at="2025-03-19T10:11:33 IST" name="createSpecializationTest" finished-at="2025-03-19T10:11:44 IST" duration-ms="10726" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Speacialization could not get successfully Deleted expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Speacialization could not get successfully Deleted expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at com.geneuineCare.healthCare.adminTest.CreateSpecializationTest.createSpecializationTest(CreateSpecializationTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSpecializationTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@fa4c865]" started-at="2025-03-19T10:11:47 IST" name="configAM" finished-at="2025-03-19T10:11:48 IST" duration-ms="1025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@fa4c865]" started-at="2025-03-19T10:11:48 IST" name="configAC" finished-at="2025-03-19T10:11:48 IST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.adminTest.CreateSpecializationTest -->
    </test> <!-- Test2 -->
    <test started-at="2025-03-19T10:10:40 IST" name="Test1" finished-at="2025-03-19T10:12:54 IST" duration-ms="133965">
      <class name="com.geneuineCare.healthCare.adminTest.CreateDoctorTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c402120]" started-at="2025-03-19T10:11:03 IST" name="configBC" finished-at="2025-03-19T10:11:05 IST" duration-ms="1695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c402120]" started-at="2025-03-19T10:11:05 IST" name="configBM" finished-at="2025-03-19T10:11:12 IST" duration-ms="7173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c402120]" started-at="2025-03-19T10:11:12 IST" name="createDoctorTest" finished-at="2025-03-19T10:11:22 IST" duration-ms="9881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDoctorTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c402120]" started-at="2025-03-19T10:11:22 IST" name="configAM" finished-at="2025-03-19T10:11:23 IST" duration-ms="1305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateDoctorTest@4c402120]" started-at="2025-03-19T10:11:23 IST" name="configAC" finished-at="2025-03-19T10:11:23 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.adminTest.CreateDoctorTest -->
      <class name="com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@54d9d12d]" started-at="2025-03-19T10:10:40 IST" name="configBC" finished-at="2025-03-19T10:10:43 IST" duration-ms="2457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@54d9d12d]" started-at="2025-03-19T10:10:43 IST" name="configBM" finished-at="2025-03-19T10:10:49 IST" duration-ms="5912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="addMedicalHistoryByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@54d9d12d]" started-at="2025-03-19T10:10:49 IST" name="addMedicalHistoryByDoctorTest" finished-at="2025-03-19T10:11:01 IST" duration-ms="12140" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button type="submit" name="submit" id="submit" class="btn btn-o btn-primary" disabled="">...</button> is not clickable at point (330, 393). Other element would receive the click: <form role="form" name="" method="post">...</form>
  (Session info: chrome=134.0.6998.89)
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '22.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [545e842ff388770043e9f0512430da16, clickElement {id=f.46E0CB3551F4DD3EF2A224A3A45A0947.d.D83357776F3C0C9113632CE2A5F50C3A.e.134}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.89, chrome: {chromedriverVersion: 134.0.6998.88 (7e3d5c978c6d..., userDataDir: C:\Users\mdsad\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51217}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51217/devtoo..., se:cdpVersion: 134.0.6998.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (545e842ff388770043e9f0512430da16)] -> name: submit]
Session ID: 545e842ff388770043e9f0512430da16]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button type="submit" name="submit" id="submit" class="btn btn-o btn-primary" disabled="">...</button> is not clickable at point (330, 393). Other element would receive the click: <form role="form" name="" method="post">...</form>
  (Session info: chrome=134.0.6998.89)
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '22.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [545e842ff388770043e9f0512430da16, clickElement {id=f.46E0CB3551F4DD3EF2A224A3A45A0947.d.D83357776F3C0C9113632CE2A5F50C3A.e.134}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.89, chrome: {chromedriverVersion: 134.0.6998.88 (7e3d5c978c6d..., userDataDir: C:\Users\mdsad\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51217}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51217/devtoo..., se:cdpVersion: 134.0.6998.89, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (545e842ff388770043e9f0512430da16)] -> name: submit]
Session ID: 545e842ff388770043e9f0512430da16
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at com.geneuineCare.healthCare.objectRepository.AddPatientPage.createPatients(AddPatientPage.java:106)
at com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest.addMedicalHistoryByDoctorTest(AddMedicalHistoryByDoctorTest.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMedicalHistoryByDoctorTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@54d9d12d]" started-at="2025-03-19T10:11:01 IST" name="configAM" finished-at="2025-03-19T10:11:03 IST" duration-ms="1240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest@54d9d12d]" started-at="2025-03-19T10:11:03 IST" name="configAC" finished-at="2025-03-19T10:11:03 IST" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.doctorTest.AddMedicalHistoryByDoctorTest -->
      <class name="com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@4c12331b]" started-at="2025-03-19T10:12:23 IST" name="configBC" finished-at="2025-03-19T10:12:32 IST" duration-ms="8964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@4c12331b]" started-at="2025-03-19T10:12:32 IST" name="configBM" finished-at="2025-03-19T10:12:45 IST" duration-ms="12924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createPatientAndSearchbyNameTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@4c12331b]" started-at="2025-03-19T10:12:45 IST" name="createPatientAndSearchbyNameTest" finished-at="2025-03-19T10:12:53 IST" duration-ms="8817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPatientAndSearchbyNameTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@4c12331b]" started-at="2025-03-19T10:12:53 IST" name="configAM" finished-at="2025-03-19T10:12:54 IST" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest@4c12331b]" started-at="2025-03-19T10:12:54 IST" name="configAC" finished-at="2025-03-19T10:12:54 IST" duration-ms="357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.doctorTest.CreatePatientAndSearchbyNameTest -->
      <class name="com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@1165b38]" started-at="2025-03-19T10:12:00 IST" name="configBC" finished-at="2025-03-19T10:12:01 IST" duration-ms="1691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@1165b38]" started-at="2025-03-19T10:12:01 IST" name="configBM" finished-at="2025-03-19T10:12:08 IST" duration-ms="6829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createAndDeleteDoctorbyAdminTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@1165b38]" started-at="2025-03-19T10:12:08 IST" name="createAndDeleteDoctorbyAdminTest" finished-at="2025-03-19T10:12:22 IST" duration-ms="13707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAndDeleteDoctorbyAdminTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@1165b38]" started-at="2025-03-19T10:12:22 IST" name="configAM" finished-at="2025-03-19T10:12:22 IST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest@1165b38]" started-at="2025-03-19T10:12:22 IST" name="configAC" finished-at="2025-03-19T10:12:23 IST" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.adminTest.CreateAndDeleteDoctorbyAdminTest -->
      <class name="com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@5b12b668]" started-at="2025-03-19T10:11:41 IST" name="configBC" finished-at="2025-03-19T10:11:43 IST" duration-ms="1411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@5b12b668]" started-at="2025-03-19T10:11:43 IST" name="configBM" finished-at="2025-03-19T10:11:43 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createPatientByDoctorTest()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@5b12b668]" started-at="2025-03-19T10:11:43 IST" name="createPatientByDoctorTest" finished-at="2025-03-19T10:11:59 IST" duration-ms="15828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPatientByDoctorTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@5b12b668]" started-at="2025-03-19T10:11:59 IST" name="configAM" finished-at="2025-03-19T10:11:59 IST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest@5b12b668]" started-at="2025-03-19T10:11:59 IST" name="configAC" finished-at="2025-03-19T10:12:00 IST" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.doctorTest.CreatePatientByDoctorTest -->
      <class name="com.geneuineCare.healthCare.adminTest.CreateSpecializationTest">
        <test-method is-config="true" signature="configBC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@327514f]" started-at="2025-03-19T10:11:23 IST" name="configBC" finished-at="2025-03-19T10:11:25 IST" duration-ms="1414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBC -->
        <test-method is-config="true" signature="configBM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@327514f]" started-at="2025-03-19T10:11:25 IST" name="configBM" finished-at="2025-03-19T10:11:28 IST" duration-ms="3537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configBM -->
        <test-method signature="createSpecializationTest()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@327514f]" started-at="2025-03-19T10:11:28 IST" name="createSpecializationTest" finished-at="2025-03-19T10:11:40 IST" duration-ms="11429" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Speacialization could not get successfully Deleted expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Speacialization could not get successfully Deleted expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertFalse(Assert.java:78)
at com.geneuineCare.healthCare.adminTest.CreateSpecializationTest.createSpecializationTest(CreateSpecializationTest.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1570)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createSpecializationTest -->
        <test-method is-config="true" signature="configAM()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@327514f]" started-at="2025-03-19T10:11:40 IST" name="configAM" finished-at="2025-03-19T10:11:41 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAM -->
        <test-method is-config="true" signature="configAC()[pri:0, instance:com.geneuineCare.healthCare.adminTest.CreateSpecializationTest@327514f]" started-at="2025-03-19T10:11:41 IST" name="configAC" finished-at="2025-03-19T10:11:41 IST" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAC -->
      </class> <!-- com.geneuineCare.healthCare.adminTest.CreateSpecializationTest -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
